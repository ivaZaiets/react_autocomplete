{"version":3,"sources":["components/DropDown.tsx","data/people.ts","App.tsx","helpers/helper.ts","index.tsx"],"names":["DropDown","setState","filteredByPerson","className","length","map","person","role","tabIndex","onMouseDown","prevState","isSelectedPerson","isSelectedPersonData","isSelectedInput","cn","sex","name","slug","peopleFromServer","born","died","fatherName","motherName","App","useState","query","state","appliedQuery","setAppliedQuery","applyQuery","useCallback","callback","delay","timerId","args","window","clearTimeout","setTimeout","debounce","normalizeQuery","toLowerCase","trim","useMemo","filter","includes","type","placeholder","value","onChange","event","target","onFocus","onBlur","ReactDOM","render","document","getElementById"],"mappings":"kQAeaA,EAA4B,SAAC,GAGnC,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,iBAEA,OACE,qBAAKC,UAAU,mBAAf,SACGD,EAAiBE,OAChBF,EAAiBG,KAAI,SAAAC,GAAM,OACzB,qBACEC,KAAK,SACLC,SAAU,EAEVC,YAAa,WACXR,GAAS,SAACS,GAAD,mBAAC,eACLA,GADI,IAEPC,kBAAkB,EAClBC,qBAAsBN,EACtBO,iBAAiB,GAJV,GAMV,EACDV,UAAWW,IAAG,gBAAiB,CAC7B,gBAAgC,MAAfR,EAAOS,IACxB,kBAAkC,MAAfT,EAAOS,MAd9B,SAiBE,4BAAIT,EAAOU,QAdNV,EAAOW,KAJW,IAsB3B,qBAAKd,UAAU,gCAAf,sCAMP,EChDYe,EAA6B,CACxC,CACEF,KAAM,oBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZL,KAAM,0BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZL,KAAM,uBAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZL,KAAM,wBAER,CACED,KAAM,sBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,4BAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZL,KAAM,wBAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZL,KAAM,wBAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZL,KAAM,8BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZL,KAAM,yBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACED,KAAM,2BACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZL,KAAM,iCAER,CACED,KAAM,uBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZL,KAAM,6BAER,CACED,KAAM,wBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZL,KAAM,8BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,0BACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZL,KAAM,gCAER,CACED,KAAM,oBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZL,KAAM,0BAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,sBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACED,KAAM,gBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZL,KAAM,sBAER,CACED,KAAM,2BACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZL,KAAM,iCAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZL,KAAM,uBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZL,KAAM,yBAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,uBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,wBAER,CACED,KAAM,yBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,+BAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,wBAER,CACED,KAAM,uBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,6BAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZL,KAAM,uBAER,CACED,KAAM,sBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACED,KAAM,kBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZL,KAAM,wBAER,CACED,KAAM,mBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZL,KAAM,yBAER,CACED,KAAM,gBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,sBAER,CACED,KAAM,iBACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZL,KAAM,uBAER,CACED,KAAM,cACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZL,KAAM,oBAER,CACED,KAAM,gCACND,IAAK,IACLI,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZL,KAAM,uCCvVH,IAAMM,EAAgB,WAC3B,MAA0BC,mBAAS,CACjCX,iBAAiB,EACjBF,kBAAkB,EAClBC,qBAAsB,KACtBa,MAAO,KAJT,mBAAOC,EAAP,KAAczB,EAAd,KAMA,EAAwCuB,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAaC,sBClBd,SAAkBC,EAAeC,GACtC,IAAIC,EAAU,EAEd,OAAO,WAAmB,IAAD,uBAAdC,EAAc,yBAAdA,EAAc,gBACvBC,OAAOC,aAAaH,GAEpBA,EAAUE,OAAOE,YAAW,WAC1BN,EAAQ,WAAR,EAAYG,EACb,GAAEF,EACJ,CACF,CDSGM,CAASV,EAAiB,KAC1B,IAYIW,EAAiBZ,EAAaa,cAAcC,OAE5CvC,EAAmBwC,mBAAQ,WAC/B,OAAOxB,EAAiByB,QACtB,SAAArC,GAAM,OAAIA,EAAOU,KAAKwB,cAAcI,SAASL,EAAvC,GAET,GAAE,CAACA,IAGF3B,EAIEc,EAJFd,qBACAC,EAGEa,EAHFb,gBACAF,EAEEe,EAFFf,iBACAc,EACEC,EADFD,MAGF,OACE,uBAAMtB,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACGS,EAAoB,UAChBA,EAAqBI,KADL,wBAEhBJ,EAAqBO,KAFL,yBAGfP,EAAqBQ,KAHN,KAKnB,uBAKJ,sBACEjB,UAAU,qBADZ,UAGE,qBACEA,UAAU,mBADZ,SAGE,uBACE0C,KAAK,OACLC,YAAY,2BACZ3C,UAAU,QACV4C,MAAOpC,EAAgB,OACrBC,QADqB,IACrBA,OADqB,EACrBA,EAAsBI,KAEtBS,EAEFuB,SApDgB,SAACC,GACzBhD,GAAS,SAACS,GAAD,mBAAC,eACLA,GADI,IAEPe,MAAOwB,EAAMC,OAAOH,MACpBpC,kBAAkB,GAHX,IAKTkB,EAAWoB,EAAMC,OAAOH,MACzB,EA8CSI,QAAS,kBAAMlD,EAAS,2BAAKyB,GAAN,IAAab,iBAAiB,IAA5C,EACTuC,OAAQ,kBAAMnD,EAAS,2BAAKyB,GAAN,IAAab,iBAAiB,IAA5C,MAIXA,GACC,qBACEV,UAAU,gBACVI,KAAK,OAFP,SAIE,cAAC,EAAD,CACEN,SAAUA,EACVC,iBAAkBA,WAO/B,EE3FDmD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.85ac210b.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Person } from '../types/Person';\nimport './DropDown.scss';\n\ntype Props = {\n  setState: React.Dispatch<React.SetStateAction<{\n    isSelectedInput: boolean,\n    isSelectedPerson: boolean,\n    isSelectedPersonData: Person | null,\n    query: string,\n  }>>,\n\n  filteredByPerson: Person[],\n};\n\nexport const DropDown: React.FC<Props> = ({\n  setState,\n  filteredByPerson,\n}) => {\n  return (\n    <div className=\"dropdown-content\">\n      {filteredByPerson.length ? (\n        filteredByPerson.map(person => (\n          <div\n            role=\"button\"\n            tabIndex={0}\n            key={person.slug}\n            onMouseDown={() => {\n              setState((prevState) => ({\n                ...prevState,\n                isSelectedPerson: true,\n                isSelectedPersonData: person,\n                isSelectedInput: false,\n              }));\n            }}\n            className={cn('dropdown-item', {\n              'has-text-link': person.sex === 'm',\n              'has-text-danger': person.sex === 'f',\n            })}\n          >\n            <p>{person.name}</p>\n          </div>\n        ))\n      ) : (\n        <div className=\"dropdown-item has-text-danger\">\n          No matching suggestions\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useCallback, useMemo, useState } from 'react';\n\nimport './App.scss';\n\nimport { DropDown } from './components/DropDown';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\nimport { debounce } from './helpers/helper';\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState({\n    isSelectedInput: false,\n    isSelectedPerson: false,\n    isSelectedPersonData: null as Person | null,\n    query: '',\n  });\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState((prevState) => ({\n      ...prevState,\n      query: event.target.value,\n      isSelectedPerson: false,\n    }));\n    applyQuery(event.target.value);\n  };\n\n  const normalizeQuery = appliedQuery.toLowerCase().trim();\n\n  const filteredByPerson = useMemo(() => {\n    return peopleFromServer.filter(\n      person => person.name.toLowerCase().includes(normalizeQuery),\n    );\n  }, [normalizeQuery]);\n\n  const {\n    isSelectedPersonData,\n    isSelectedInput,\n    isSelectedPerson,\n    query,\n  } = state;\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {isSelectedPersonData ? (\n          `${isSelectedPersonData.name}\n          (${isSelectedPersonData.born}\n          = ${isSelectedPersonData.died})`\n        ) : (\n          'No selected person'\n        )}\n\n      </h1>\n\n      <div\n        className=\"dropdown is-active\"\n      >\n        <div\n          className=\"dropdown-trigger\"\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={isSelectedPerson ? (\n              isSelectedPersonData?.name\n            ) : (\n              query\n            )}\n            onChange={handleQueryChange}\n            onFocus={() => setState({ ...state, isSelectedInput: true })}\n            onBlur={() => setState({ ...state, isSelectedInput: false })}\n          />\n        </div>\n\n        {isSelectedInput && (\n          <div\n            className=\"dropdown-menu\"\n            role=\"menu\"\n          >\n            <DropDown\n              setState={setState}\n              filteredByPerson={filteredByPerson}\n            />\n          </div>\n        )}\n      </div>\n    </main>\n  );\n};\n","export function debounce(callback: any, delay: number) {\n  let timerId = 0;\n\n  return (...args: any) => {\n    window.clearTimeout(timerId);\n\n    timerId = window.setTimeout(() => {\n      callback(...args);\n    }, delay);\n  };\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}